package net.sf.aidl2;

import android.os.IInterface;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;

import java.io.Externalizable;
import java.io.ObjectInputStream;

/**
 * Describes various strategies, used by AIDL2 to serialize data to Parcel.
 */
public enum DataKind {
    /**
     * Automatically determine approach to serialization by testing for subtyping.
     * The default order of checks: primitive array, Serializable array,
     * array of other supported components, Parcelable, IInterface, Externalizable,
     * Serializable Map of Serializable types, other Map,
     * Serializable Collection of Serializable types, other Collection, Serializable.
     *
     * Incompatible element/component/key types in type signatures will result in failed checks.
     * Arrays of serializable types will be read/written via serializable path as long
     * as their components pass the checks. Primitives are always written to Parcel directly
     * using Parcel methods (not via serializable path).
     */
    AUTO,

    /**
     * Write to Parcel using Parcelable approach (either via {@link Parcel#writeParcelable} and
     * {@link Parcel#readParcelable} or directly by using {@link Parcelable#writeToParcel} and {@link Creator}).
     *
     * Only for use with Parcelable subtypes.
     */
    PARCELABLE,

    /**
     * Write to Parcel using {@link IInterface#asBinder}. The read approach depends on type of IInterface.
     *
     * Only for use with IInterface subtypes, either annotated with {@link AIDL} or generated by legacy aidl tool.
     */
    BINDER,

    /**
     * Write to Parcel by calling {@link Externalizable#writeExternal}, deserialize either via
     * {@link ObjectInputStream#readObject} or by instantiating a class directly.
     *
     * Only for Externalizable subclasses.
     */
    EXTERNALIZABLE,

    /**
     * Write to Parcel as Map (key/value pairs one by one in iteration order),
     */
    MAP,

    /**
     * Write to Parcel as Collection (all elements one by one in iteration order).
     */
    SEQUENCE,

    /**
     * Write to Parcel using Java serialization.
     *
     * Only for Externalizable and Serializable subclasses.
     */
    SERIALIZABLE,
}
